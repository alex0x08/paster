<?xml version="1.0" encoding="UTF-8"?>
<!--
    Security configuration, used for 'private' mode:
    when authentication is required to view/list pastas

    version is required for:
    http://www.springframework.org/schema/security/spring-security-6.0.xsd
    due to bug in Idea,s xsd validation
-->
<beans:beans profile="paster-security-private"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd">
    <global-method-security secured-annotations="enabled" jsr250-annotations="enabled" />
    <http pattern="/images/**"  security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/errors/*" security="none"/>
    <http pattern="/libs/**" security="none"/>
    <http pattern="/resources/${paste.app.id}/**" security="none"/>
    <http pattern="/assets/${paste.app.id}/**" security="none"/>
    <http pattern="/static/${paste.app.id}/**" security="none"/>

    <http realm="Paster Realm Private"
          auto-config="false"
          use-expressions="true"
          authentication-manager-ref="normal-auth-manager"
          disable-url-rewriting="true">
    <!--
        in Spring Security 6.x intercept-url detects filter-mapping prefix somehow,
        so need to strip it from pattern.
     -->
        <intercept-url pattern="/login" access="permitAll()"/>
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/act/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/act/doAuth" access="permitAll()" />
        <intercept-url pattern="/**"  access="isAuthenticated()" />

        <form-login login-page="/main/login"
                    default-target-url='/main/paste/list'
                    authentication-failure-url="/main/login?authfailed=true"
                    always-use-default-target='true'
                    login-processing-url="/act/doAuth"/>

        <session-management>
            <concurrency-control error-if-maximum-exceeded="false" max-sessions="10"
                                 session-registry-ref="sessionRegistry"/>
        </session-management>
        <remember-me services-ref="customRememberMeServices"   />
        <csrf request-matcher-ref="csrfSecurityRequestMatcher"/>
        <headers defaults-disabled="true">
            <cache-control />
            <content-type-options />
            <hsts />
            <!--frame-options  /-->
            <xss-protection />
        </headers>
        <logout logout-url="/act/logout"
                logout-success-url="/main/login?exit"
                invalidate-session="true"  />

    </http>
    <!--
    We need to turn off StrictHttpFirewall due to:

    ''Rejects URLs that contain characters that are not printable ASCII characters.
    There is no way to disable this as it is considered extremely risky to disable this constraint.''
    https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/web/firewall/StrictHttpFirewall.html

   This is only way to have UTF-8 characters right in url string.
    -->
    <beans:bean id="defaultHttpFirewall" class="org.springframework.security.web.firewall.DefaultHttpFirewall"/>
    <http-firewall ref="defaultHttpFirewall"/>

    <beans:bean id="csrfSecurityRequestMatcher" class="com.Ox08.paster.webapp.web.CsrfSecurityRequestMatcher"/>
    <beans:bean id="userManager"
                class="com.Ox08.paster.webapp.manager.UserManager">
    </beans:bean>
    <authentication-manager alias="normal-auth-manager">
        <authentication-provider user-service-ref="userManager">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
        <authentication-provider ref="rememberMeAuthenticationProvider" />
    </authentication-manager>
    <beans:bean id="customRememberMeServices"
                class="com.Ox08.paster.webapp.web.security.PasterPersistentRememberMeServices">
        <!-- This ensures that remember-me is added as an authentication provider -->
        <beans:constructor-arg value="${paster.security.session.salt}" />
        <beans:constructor-arg ref="userManager" />
        <beans:constructor-arg ref="tokenDao" />
    </beans:bean>
    <beans:bean id="rememberMeAuthenticationProvider"
                class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <!-- This ensures that remember-me is added as an authentication provider -->
        <beans:constructor-arg value="${paster.security.session.salt}" />
    </beans:bean>
    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!-- Automatically receives AuthenticationEvent messages -->
    <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>
    <beans:bean id="jspExpresionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

</beans:beans>
