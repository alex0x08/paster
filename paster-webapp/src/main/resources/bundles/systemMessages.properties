
sgate.system.message.debugMode=[debug mode is {}]
sgate.system.message.appHome=[app's home]: {}
sgate.system.message.appRelease=[release] {}
sgate.system.message.appGitBranch=[git] branch {}
sgate.system.message.appHostname=[server] {}
sgate.system.message.appExternalUrl=[external url] {}
sgate.system.message.appConfigNotFound=app's config {} not found.
sgate.system.message.loadedLinesFromAppConf=loaded {} lines from app's config
sgate.system.message.addedToConfFromPlugin=added {} to app's config from plugin {}"
sgate.system.message.noPluginsFound=no plugins found!
sgate.system.message.foundPlugin=found plugin {}
sgate.system.message.fireModelHandlers=fire {} model handlers for type {}
sgate.system.message.registeredModelHandler=registered model handler for type {}
sgate.system.message.registeredResultHandler=registered result handler for type {}
sgate.system.message.checkingRequestId=checking with request id, {}
sgate.system.message.requestInputXml=request input xml with secret  : XXX
sgate.system.message.bypassCheckForAuthenticatedUser=bypassing secret check for authenticated user {}
sgate.system.message.downloadingFile=downloading file  {}
sgate.system.message.userAuthenticated=use authenticated user's session {}
sgate.system.message.logTitle.Date=Date
sgate.system.message.logTitle.LineOfCaller=Line
sgate.system.message.logTitle.Level=Level
sgate.system.message.logTitle.Logger=Class
sgate.system.message.logTitle.Message=Message
sgate.system.message.logTitle.ClassOfCaller=Class
sgate.system.message.logTitle.MethodOfCaller=Method	
sgate.system.message.logLevel.DEBUG=Debug
sgate.system.message.logLevel.INFO=Info
sgate.system.message.logLevel.WARN=Warn
sgate.system.message.logLevel.ERROR=Error
sgate.system.message.logSessionStartTime=Log session start time
sgate.system.message.dlq.name=Dead Letter Queue ( DLQ )
sgate.system.message.usingRouter=using router :{}
sgate.system.message.userParsedRoles=parsed {} roles for user '{}'
sgate.system.message.usersPasswordUpdated=Password updated for user '{}'"
sgate.system.message.userRemoved=User '{}' removed
sgate.system.message.userUpdated=User '{}' updated

sgate.system.settings.formFieldValidationError=form field validation error: {}
sgate.system.settings.formObjectValidationError=form object validation error: {}


sgate.system.message.filesDir=[files storage]: {}

