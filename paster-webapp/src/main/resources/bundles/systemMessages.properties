
paster.system.message.debugMode=[debug mode is {}]
paster.system.message.appHome=[app's home]: {}
paster.system.message.appRelease=[release] {}
paster.system.message.appGitBranch=[git] branch {}
paster.system.message.appHostname=[server] {}
paster.system.message.appExternalUrl=[external url] {}
paster.system.message.appConfigNotFound=app's config {} not found.
paster.system.message.loadedLinesFromAppConf=loaded {} lines from app's config
paster.system.message.addedToConfFromPlugin=added {} to app's config from plugin {}"
paster.system.message.noPluginsFound=no plugins found!
paster.system.message.foundPlugin=found plugin {}
paster.system.message.fireModelHandlers=fire {} model handlers for type {}
paster.system.message.registeredModelHandler=registered model handler for type {}
paster.system.message.registeredResultHandler=registered result handler for type {}
paster.system.message.checkingRequestId=checking with request id, {}
paster.system.message.requestInputXml=request input xml with secret  : XXX
paster.system.message.bypassCheckForAuthenticatedUser=bypassing secret check for authenticated user {}
paster.system.message.downloadingFile=downloading file  {}
paster.system.message.userAuthenticated=use authenticated user's session {}
paster.system.message.logTitle.Date=Date
paster.system.message.logTitle.LineOfCaller=Line
paster.system.message.logTitle.Level=Level
paster.system.message.logTitle.Logger=Class
paster.system.message.logTitle.Message=Message
paster.system.message.logTitle.ClassOfCaller=Class
paster.system.message.logTitle.MethodOfCaller=Method	
paster.system.message.logLevel.DEBUG=Debug
paster.system.message.logLevel.INFO=Info
paster.system.message.logLevel.WARN=Warn
paster.system.message.logLevel.ERROR=Error
paster.system.message.logSessionStartTime=Log session start time
paster.system.message.dlq.name=Dead Letter Queue ( DLQ )
paster.system.message.usingRouter=using router :{}
paster.system.message.userParsedRoles=parsed {} roles for user '{}'
paster.system.message.usersPasswordUpdated=Password updated for user '{}'"
paster.system.message.userRemoved=User '{}' removed
paster.system.message.userUpdated=User '{}' updated

paster.system.settings.formFieldValidationError=form field validation error: {}
paster.system.settings.formObjectValidationError=form object validation error: {}


paster.system.message.filesDir=[files storage]: {}

