<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
       xmlns:jee="http://www.springframework.org/schema/jee"         
       xsi:schemaLocation="http://www.springframework.org/schema/beans                             
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/data/neo4j 
                           http://www.springframework.org/schema/data/neo4j/spring-neo4j.xsd 
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx.xsd">



    <!--context:annotation-config/-->
    <!--context:spring-configured/-->
    
    <!--tx:jta-transaction-manager /-->
     
    <tx:annotation-driven transaction-manager="transactionManager"  />
    
    
        <!--bean id="transactionManager"
          class="org.springframework.data.neo4j.transaction.ChainedTransactionManager" >
              <constructor-arg>
                  <list>
                      <ref bean="jpaTransactionManager"/>
                      <ref bean="neo4jTransactionManager"/>
                  </list>
              </constructor-arg>
          </bean-->  

    
     <bean id="transactionManager" 
          class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"  />
     
    <!--
      
    <bean id="neo4jTransactionManager"
    	   class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager">
            <bean class="org.neo4j.kernel.impl.transaction.SpringTransactionManager">
                <constructor-arg ref="graphDatabaseService"/>
            </bean>
        </property>
        <property name="userTransaction">
            <bean class="org.neo4j.kernel.impl.transaction.UserTransactionImpl">
                <constructor-arg ref="graphDatabaseService"/>
            </bean>
        </property>
        <property name="allowCustomIsolationLevels" value="true"/>
    </bean-->
    
   
  
  <bean id="graphDatabaseService" class="org.neo4j.kernel.EmbeddedGraphDatabase"
            destroy-method="shutdown">
        <constructor-arg index="0" value="${app.home}/trees"/>
        <constructor-arg index="1">
            <map>
                <entry key="allow_store_upgrade" value="true"/>
            </map>
        </constructor-arg>
       
    </bean>


        

    
    <neo4j:config graphDatabaseService="graphDatabaseService" entityManagerFactory="entityManagerFactory"/>

    <neo4j:repositories base-package="uber.megashare.service.tree"/>
    

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
      destroy-method="close">
        <property name="driverClass" value="${database.driverClassName}" />
        <property name="jdbcUrl" value="${database.url}" />
        <property name="user" value="${database.username}" />
        <property name="password" value="${database.password}" />
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="5" />
        <property name="maxStatements" value="500" />
        <property name="loginTimeout" value="300" />
        <property name="initialPoolSize" value="5"></property>
        <property name="checkoutTimeout" value="1000"/>
        <property name="automaticTestTable" value="C3P0_TEST_TABLE"></property>
        <property name="testConnectionOnCheckin" value="true"></property>
        <property name="idleConnectionTestPeriod" value="60"></property>
          
        
    </bean>
    
    		
    <bean id="entityManagerFactory" 
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource" 
          p:packagesToScan="uber.megashare.model"
          p:persistenceUnitName="shareJPA"
          p:persistenceProviderClass="org.hibernate.ejb.HibernatePersistence"
      	  >     
        
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
                <property name="databasePlatform" value="${hibernate.dialect}"/>
                <property name="showSql" value="${jdbc.show-sql}"/>
               
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.search.default.indexBase" value="${app.home}/index"/>
                <!--entry key="hibernate.search.default.directory_provider"		
                       value="org.hibernate.search.store.FSDirectoryProvider"/-->
                <entry key="hibernate.hbm2ddl.auto"		
                       value="update"/>              
                 <entry key="hibernate.query.substitutions"		
                       value="true 'Y', false 'N'"/>
                <entry key="hibernate.cache.use_second_level_cache"		
                       value="true"/>              
                <entry key="hibernate.cache.provider_class"		
                       value="org.hibernate.cache.EhCacheProvider"/>              
                <entry key="hibernate.cache.region.factory_class"		
                       value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>              
               
                <entry key="hibernate.search.analyzer"		
                       value="org.apache.lucene.morphology.russian.RussianAnalyzer"/>
            </map>		
        </property>
    </bean>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
  
    <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>

     
</beans>
